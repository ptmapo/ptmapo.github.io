<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>PtBlog</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://removeif.github.io/"/>
  <updated>2020-06-03T04:02:33.539Z</updated>
  <id>https://removeif.github.io/</id>
  
  <author>
    <name>Ptmapo</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>1231</title>
    <link href="https://removeif.github.io/posts/eb89142c.html"/>
    <id>https://removeif.github.io/posts/eb89142c.html</id>
    <published>2020-06-03T04:02:24.711Z</published>
    <updated>2020-06-03T04:02:33.539Z</updated>
    
    <summary type="html">
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>123</title>
    <link href="https://removeif.github.io/posts/884863d2.html"/>
    <id>https://removeif.github.io/posts/884863d2.html</id>
    <published>2020-06-03T04:00:08.345Z</published>
    <updated>2020-06-03T04:00:13.327Z</updated>
    
    <summary type="html">
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>mysql 基础知识及DDL,DML</title>
    <link href="https://removeif.github.io/posts/c8edb6a0.html"/>
    <id>https://removeif.github.io/posts/c8edb6a0.html</id>
    <published>2020-06-02T09:03:13.000Z</published>
    <updated>2020-06-02T17:08:54.691Z</updated>
    
    <content type="html"><![CDATA[<h2 id="MYSQL基础"><a href="#MYSQL基础" class="headerlink" title="MYSQL基础"></a>MYSQL基础</h2><p>  cmd操作指令：mysql -u用户名 -p密码 -h主机地址 -P端口号<br>  -u ：user<br>  -p ：password  隐式输入无需在-p后加密码<br> -h  ：host   默认是localhost<br> -P  ：port   mysql默认是3306</p><p><strong>定义</strong></p><a id="more"></a><p>SQL： Structured Query language    结构化查询语言</p><p><strong>规范</strong></p><p>一条语句要以分号（;）结束</p><p>sql可以单行和多行书写，一般通过缩进和换行书写提高代码可读性</p><p>sql的关键词一般都要全大写</p><p><strong>分类</strong></p><p><strong>DDL</strong>（Data Defination Language）  数据定义语言 </p><p>用于操作数据库常用对象，例如数据库 表格等，常用的关键字：CREATE（创建）； ALTER（修改）  ； DROP（删除）等</p><p><strong>DML</strong>（Data Manipulation Language）数据操作语言</p><p>用于对表格进行增删改操作，常用关键字：INSERT（增）  ； DELETE（删）  ；  UPDATE （改）等</p><p><strong>DQL</strong>（Data Query Language） 数据查询语言</p><p>用于对表格进行查询操作 ，常用关键字： SELECT（查）  ； WHERE（条件）  ；  FROM（位置）等</p><p><strong>DCL</strong>（Data Control Language） 数据控制语言</p><p>用于对权限的控制 ，常用关键字 ： GRANT(授权)   REVOKE（撤销）</p><h3 id="操作Database"><a href="#操作Database" class="headerlink" title="操作Database"></a>操作Database</h3><pre><code>查看所有的databaseshow databases;</code></pre><p><strong>创建database</strong><br>     - 直接创建：create database 名称;<br>     - 指定编码方式创建： create database 名称 character set utf8;<br>     - 如果数据库不存在则创建：create database if not exists 名称;<br><strong>使用database</strong><br>     - use 数据库名<br> <strong>修改database</strong><br>     - alter database 名称 character set gbk;<br><strong>删除database</strong><br>     - 直接删除：drop database 名称;<br>    - 如果存在则删除：drop database if exists 名称;</p><h3 id="操作table"><a href="#操作table" class="headerlink" title="操作table"></a>操作table</h3><p>*<em>1.查询当前database下所有可用的table   *</em></p><pre><code>show tables;</code></pre><p><strong>2.mysql中常用的数据类型</strong></p><p><strong>在MySQL中，有三种主要类型：Text（文本），Number（数字），Date/Time（日期/时间）类型。</strong></p><p><strong>Text类型：</strong></p><ul><li>常用类型：<ul><li>CHAR(size) ：括号中指定字符串长度，最多255个字符。不可变字符串，性能好，但占用空间是固定的。</li><li>VARCHAR(size)：括号中指定字符串长度，最多255个字符可变字符串，如果长度大于255则被转换为TEXT类型。可变字符串性能差，但占用空间是可变的。</li><li>TEXT ：不需要指定长度，用于存放大文本数据。</li></ul></li></ul><p><strong>Number类型</strong></p><ul><li>常用类型：<ul><li>INT(size)：括号中指定最大位数。4个字节。</li><li>TINYINT(size)：-128到127。0到255 无符号。括号中指定最大位数。1个字节，如果长度为1，通常用于表示boolean，1-&gt;true,  0-&gt;false。</li><li>BIGINT(size)：括号中指定最大位数，8个字节。</li><li>FLOAT(size,d)：size指定最大位数，d指定小数点右侧的最大位数。存放带有浮动小数点的小数字，4个字节。</li><li>DOUBLE(size,d)：size指定最大位数，d指定小数点右侧的最大位数。存放带有浮动小数点的大数字，8个字节。</li></ul></li></ul><p><strong>Date/Time类型：</strong><br>常用类型：<br>DATE() ：格式：YYYY-MM-DD  年月日。<br>DATE() ：格式：YYYY-MM-DD HH : MM : SS   年月日时分秒。<br><strong>3.创建表格</strong></p><pre><code>create table 表名 （        列名 列类型，        列名 列类型，            列名 列类型）;</code></pre><p><strong>4.查看表格结构</strong></p><pre><code>desc 表名字；</code></pre><p><strong>5.修改表格</strong></p><ul><li><p>修改表名</p><pre><code>alter table 原表名 rename to 新表名；</code></pre></li><li><p>修改字段（列）的类型</p><pre><code>alter table 表名 modify 列名 类型；</code></pre></li><li><p>修改字段名 </p><pre><code>alter table 表名 change 原列名 新列名 类型；</code></pre></li><li><p>增加字段</p><pre><code>alter table 表名 add（列名 类型，....）;</code></pre></li><li><p>删除字段</p><pre><code>alter table 表名 drop column 列名;</code></pre></li></ul><p><strong>6.删除表格</strong></p><pre><code>drop table [if exists] 表名;</code></pre><h3 id="DML操作"><a href="#DML操作" class="headerlink" title="DML操作"></a>DML操作</h3><p><strong>新增数据：</strong></p><pre><code>insert into (列名1，列名2，列名3) values (值1，值2，值3);</code></pre><p>列和值要一一对应,多个数据逗号隔开。</p><p>列可以省略，表示所有的列都要增加数据</p><p>数据的类型要和列的类型一致，除了数字以外，其他数据都需要加引号（单引号或双引号）</p><p><strong>修改数据</strong></p><pre><code>update 表名 set 列1=值1，列2=值2 [where 条件];</code></pre><p><strong>删除数据</strong></p><pre><code>dalete from 表名 [where 条件];        效率低可回滚。truncate table 表名;       如果要删除整个表的数据，建议使用truncate。效率高不可回滚。</code></pre>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;MYSQL基础&quot;&gt;&lt;a href=&quot;#MYSQL基础&quot; class=&quot;headerlink&quot; title=&quot;MYSQL基础&quot;&gt;&lt;/a&gt;MYSQL基础&lt;/h2&gt;&lt;p&gt;  cmd操作指令：mysql -u用户名 -p密码 -h主机地址 -P端口号&lt;br&gt;  -u ：user&lt;br&gt;  -p ：password  隐式输入无需在-p后加密码&lt;br&gt; -h  ：host   默认是localhost&lt;br&gt; -P  ：port   mysql默认是3306&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;定义&lt;/strong&gt;&lt;/p&gt;
    
    </summary>
    
    
      <category term="mysql" scheme="https://removeif.github.io/categories/mysql/"/>
    
    
      <category term="mysql" scheme="https://removeif.github.io/tags/mysql/"/>
    
  </entry>
  
</feed>
